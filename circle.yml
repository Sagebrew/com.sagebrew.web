machine:
  services:
    - rabbitmq-server
    - docker
    - neo4j


dependencies:
  cache_directories:
    - elasticsearch-1.3.2
  post:
    - pip install -r ../requirements/base.txt
    - sudo chown ubuntu /etc/rsyslog.d/
    - ~/virtualenvs/venv-system/bin/python ~/com.sagebrew.web/sagebrew/manage.py logglypopulation $LOG_ACCOUNT $LOG_TOKEN
    - sudo chown root /etc/rsyslog.d/
    - sudo service rsyslog restart
    - if [[ ! -e elasticsearch-1.3.2 ]]; then wget https://download.elasticsearch.org/elasticsearch/elasticsearch/elasticsearch-1.3.2.tar.gz && tar -xvf elasticsearch-1.3.2.tar.gz; fi
    - elasticsearch-1.3.2/bin/elasticsearch: {background: true}
    - cd ~/com.sagebrew.web/sagebrew && ~/virtualenvs/venv-system/bin/celery -A sagebrew worker -l info -n worker1 --concurrency=2:
        background: true
    - cd ~/com.sagebrew.web/sagebrew && ~/virtualenvs/venv-system/bin/celery -A sagebrew worker -l info -n worker2 --concurrency=2:
        background: true
    - cd ~/com.sagebrew.web/sagebrew && ~/virtualenvs/venv-system/bin/celery -A sagebrew beat -l info:
        background: true
    - python ~/com.sagebrew.web/sagebrew/manage.py runserver 127.0.0.1:8080:
        background: true

test:
  override:
    - coverage run --source='.' manage.py test
  post:
    - coverage html
    - coveralls --rcfile=$CIRCLE_ARTIFACTS
#    - pep8 --show-source --exclude='~/com.sagebrew.web/sagebrew/api/alchemyapi.py` --show-pep8 ~/com.sagebrew.web/sagebrew/
    - ~/virtualenvs/venv-system/bin/python ~/com.sagebrew.web/sagebrew/manage.py dockerfilepopulation
    - sed "s/<EMAIL>/$DOCKER_EMAIL/;s/<AUTH>/$DOCKER_AUTH/" < ~/com.sagebrew.web/dockercfg.template > ~/.dockercfg
    - docker build --no-cache=$CLEAR_CACHE -t sagebrew/sb_worker:$CIRCLE_SHA1 ~/com.sagebrew.web/dockerfiles/worker/
    - docker build --no-cache=$CLEAR_CACHE -t sagebrew/sb_web:$CIRCLE_SHA1 ~/com.sagebrew.web/dockerfiles/web_app/
    - docker run -h box-worker --name worker_one -e NEO4J_REST_URL=$GRAPHEN_NEO4J_REST_URL -e APP_USER=$APP_USER -e REPO_NAME=$REPO_NAME -e PROJECT_NAME=$PROJECT_NAME -e LOG_ACCOUNT=$LOG_ACCOUNT -e LOG_TOKEN=$LOG_TOKEN -d -t sagebrew/sb_worker:$CIRCLE_SHA1
    - docker run -h box-webapp --name web_app_one -p 443:443 -e NEO4J_REST_URL=$GRAPHEN_NEO4J_REST_URL -e APP_USER=$APP_USER -e PROJECT_PATH=$PROJECT_PATH -e REPO_NAME=$REPO_NAME -e PROJECT_NAME=$PROJECT_NAME -e LOG_ACCOUNT=$LOG_ACCOUNT -e LOG_TOKEN=$LOG_TOKEN -d -t sagebrew/sb_web:$CIRCLE_SHA1
    - curl --retry 10 --retry-delay 5 --insecure -v https://localhost/

checkout:
  post:
    - git submodule sync
    - git submodule update --init

deployment:
#  production:
#    branch: master
  staging:
    branch: staging
    commands:
      - bash -x ~/com.sagebrew.web/deployment/staging.sh $CIRCLE_SHA1
      - git checkout master
      - git merge --no-edit staging
      - git push origin master
      - git checkout staging


general:
  build_dir: sagebrew

